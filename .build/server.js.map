{"version":3,"file":"server.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AAAA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AADA;AAGA;;;;;;;;;;AC1BA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;;AAEA;;AAEA;AAEA;AACA;;AADA;AAKA;;AAEA;AACA;AACA;;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAiBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA","sources":["server/read-assets-manifest.js","../external commonjs \"@hapi/hapi\"","../external node-commonjs \"fs\"","../external node-commonjs \"path\"","../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","server/index.js"],"sourcesContent":["const path = require('path');\nconst fs = require('fs');\n\nexport function readAssetsManifest() {\n    // читаем манифест\n    const manifestPath = path.join(process.cwd(), '.build/webpack-assets.json');\n    const manifest = JSON.parse(fs.readFileSync(manifestPath, 'utf8'));\n\n    const js = [];\n    const css = [];\n    // vendor должен идти перед main\n    ['vendor', 'main'].forEach((key) => {\n        if (!manifest[key]) { // в дев сборке vendor.js не формируется\n            return;\n        }\n        if (manifest[key].js) {\n            js.push(manifest[key].js);\n        }\n        if (manifest[key].css) {\n            css.push(manifest[key].css);\n        }\n    });\n\n    return {\n        js, css\n    };\n}\n","module.exports = require(\"@hapi/hapi\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const Hapi = require('@hapi/hapi');\n\nimport { readAssetsManifest } from './read-assets-manifest.js';\n\nconst init = async () => {\n\n    const server = Hapi.server({\n        port: 3000,\n        // host: 'localhost'\n    });\n\n    let assets = [];\n\n    try {\n        assets = readAssetsManifest();\n    } catch (e) {\n        \n    }\n\n    console.log('assets', assets);\n\n    server.route({\n        method: 'GET',\n        path: '/',\n        handler: (request, h) => {\n            return `\n                <html>\n                    <head>\n                    </head>\n                    <body>\n                        <div id=\"react-app\">app content</div>\n                        <script type=\"text/javascript\" src=\"/${ assets.js[0] }\" defer ></script>\n                    </body>\n                </html>\n            `;\n        }\n    });\n\n    await server.start();\n    console.log('Server running on %s', server.info.uri);\n};\n\nprocess.on('unhandledRejection', (err) => {\n    console.log(err);\n    process.exit(1);\n});\n\ninit();\n"],"names":[],"sourceRoot":""}