"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateWithPresets = void 0;
const lodash_merge_1 = __importDefault(require("lodash.merge"));
const try_resolve_1 = require("../util/try-resolve");
const validate_settings_keys_1 = __importDefault(require("./validate-settings-keys"));
const available_package_settings_1 = require("./available-package-settings");
function updateWithPresets(config) {
    const packageSettings = config.appPackage.aruiScripts || {};
    if (!packageSettings.presets) {
        return config;
    }
    const presetsConfigPath = try_resolve_1.tryResolve(`${packageSettings.presets}/arui-scripts.config.js`, { paths: [config.cwd] });
    const presetsOverridesPath = try_resolve_1.tryResolve(`${packageSettings.presets}/arui-scripts.overrides.js`, { paths: [config.cwd] });
    if (presetsConfigPath) {
        const presetsSettings = require(presetsConfigPath);
        validate_settings_keys_1.default(available_package_settings_1.availablePackageSettings, presetsSettings);
        config = lodash_merge_1.default(config, presetsSettings);
    }
    if (presetsOverridesPath) {
        config.overridesPath.unshift(presetsOverridesPath);
    }
    delete packageSettings.presets;
    return config;
}
exports.updateWithPresets = updateWithPresets;
