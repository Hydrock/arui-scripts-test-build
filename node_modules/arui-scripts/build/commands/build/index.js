"use strict";
// Do this as the first thing so that any code reading it knows the right env.
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint import/no-extraneous-dependencies: 0 */
/* eslint no-console: 0 */
const child_process_1 = require("child_process");
const fs_extra_1 = __importDefault(require("fs-extra"));
const path_1 = __importDefault(require("path"));
const check_required_files_1 = __importDefault(require("../util/check-required-files"));
const app_configs_1 = __importDefault(require("../../configs/app-configs"));
process.env.BABEL_ENV = 'production';
process.env.NODE_ENV = 'production';
process.env.BROWSERSLIST_CONFIG = process.env.BROWSERSLIST_CONFIG || require.resolve('../../../.browserslistrc');
if (!check_required_files_1.default()) {
    process.exit(1);
}
if (fs_extra_1.default.pathExistsSync(app_configs_1.default.serverOutputPath)) {
    fs_extra_1.default.removeSync(app_configs_1.default.serverOutputPath);
}
const compileServer = child_process_1.spawn('node', [path_1.default.join(__dirname, './server')], { stdio: 'inherit' });
const compileClient = child_process_1.spawn('node', [path_1.default.join(__dirname, './client')], { stdio: 'inherit' });
const onProcessExit = (code) => {
    if (code !== 0) {
        compileServer.kill();
        compileClient.kill();
        process.exit(code);
    }
};
compileClient.on('error', onProcessExit);
compileServer.on('error', onProcessExit);
compileServer.on('close', onProcessExit);
compileClient.on('close', onProcessExit);
